{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 TimesNewRomanPSMT;
}
{\colortbl;\red255\green255\blue255;\red5\green99\blue193;}
\margl1440\margr1440\vieww28600\viewh15580\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Shell Commands:\
\pard\pardeftab720\ri0\sb320\sa60\partightenfactor0

\f1\fs28 \cf0 Troubleshooting docker bridge configuration
\f0\b0\fs19 \
$ sudo brctl show\
\pard\pardeftab720\ri0\sb240\sa60\partightenfactor0

\f1\b\fs26 \cf0 Connecting containers to the external world
\f0\b0\fs19 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ sudo iptables -t nat -L \'96n \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 $ apt-get install bridge-utils\
$ brctl show\
\pard\pardeftab720\ri0\sa60\partightenfactor0
\cf0 $ docker run -t -i --name container1 ubuntu:latest /bin/bash\
root@container-id:/# ifconfig\
root@container-id:/# ip route\
\
$ sudo service docker stop\
$ sudo ip link set dev docker0 down\
$ sudo brctl delbr docker0\
$ sudo iptables -t nat -F POSTROUTING\
$ echo 'DOCKER_OPTS="-b=br0"' >> /etc/default/docker\
$ sudo brctl addbr br0\
$ sudo ip addr add 192.168.10.1/24 dev br0\
$ sudo ip link set dev br0 up\
$ sudo service docker start\
\
\pard\pardeftab720\ri0\sb400\sa60\partightenfactor0

\f1\b\fs32 \cf0 Configuring DNS\
\pard\pardeftab720\ri0\sb400\sa60\partightenfactor0

\f0\b0\fs19 \cf0 $ docker run --dns=8.8.8.8 --net="bridge" -t -i  ubuntu:latest /bin/bash\
$ docker run --dns=8.8.8.8 --hostname=docker-vm1  -t -i  ubuntu:latest /bin/bash\
\pard\pardeftab720\ri0\sa120\partightenfactor0

\f2\fs22 \cf0 $ cat /proc/sys/net/ipv4/ip_forward 
\f0\fs19   \
\pard\pardeftab720\ri0\sa60\partightenfactor0
\cf0 $ echo 1 > /proc/sys/net/ipv4/ip_forward \
$ cat /proc/sys/net/ipv4/ip_forward \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ iptables \'96I DOCKER \'96i ext_if ! \'96s 10.10.10.10 \'96j DROP\
\
$ 
\f0\fs19  docker run -i -t --name c1 ubuntu:latest /bin/bash
\f2\fs22 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 root@container-id:/# ifconfig\
\
$ docker run -i -t --name c2 ubuntu:latest /bin/bash\
root@container-1:/# ping container-2-ip-address\
root@container-2:/# ping container-1-ip-address\
$ iptables -L -n\
$ service docker stop \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ vi /etc/default/docker 
\f2\fs22 \

\f1\fs20 DOCKER="/usr/local/bin/docker" \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4" \
DOCKER_OPTS="--icc=false --iptables=true"\
$ service docker start\
$ iptables -L -n\
\
\pard\pardeftab720\ri0\sb320\sa60\partightenfactor0

\f1\b\fs28 \cf0 Linkng Containers
\f0\b0\fs19 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 $ docker run -i -t -p 2222:22 --name sshserver ubuntu bash\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ iptables -L -n\
$ docker run -i -t --name sshclient --link sshserver:sshserver ubuntu bash\
$ iptables -L -n\
$ 
\f0\fs19 docker inspect -f "\{\{ .HostConfig.Links \}\}" sshclient\
$ ssh root@172.17.0.3 \'96p 22
\b \
\
\pard\pardeftab720\ri0\sb320\sa60\partightenfactor0

\f1\fs28 \cf0 Project Calico 
\f0\fs19 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\b0\fs20 \cf0 $ calicoctl\
\pard\pardeftab720\ri0\sb400\sa60\partightenfactor0

\b\fs32 \cf0 Configuring an overlay network with Docker engine swarm node
\b0\fs20 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 $ curl -L \
\pard\pardeftab720\ri0\sa60\partightenfactor0

\f0\fs19 \cf0 $ docker-machine version\
$ docker-machine create -d vmwarefusion  swarm-consul\
\
$(docker-machine config swarm-consul) run \\\
>         -d \\\
>         --restart=always \\\
>         -p "8500:8500" \\\
>         -h "consul" \\\
>         progrium/consul -server -bootstrap\
\
$ docker-machine create \\\
>   -d vmwarefusion \\\
>   --swarm \\\
>   --swarm-master \\\
>   --swarm-discovery="consul://$(docker-machine ip swarm-consul):8500" \\\
>   --engine-opt="cluster-store=consul://$(docker-machine ip swarm-consul):8500" \\\
>   --engine-opt="cluster-advertise=eth0:2376" \\\
>   swarm-0\
\
\
$ docker-machine create \\\
>   -d vmwarefusion \\\
>   --swarm \\\
>   --swarm-discovery="consul://$(docker-machine ip swarm-consul):8500" \\\
>   --engine-opt="cluster-store=consul://$(docker-machine ip swarm-consul):8500" \\\
>   --engine-opt="cluster-advertise=eth0:2376" \\\
>   swarm-1\
\
\pard\pardeftab720\ri0\sa120\partightenfactor0
\cf0 $ eval $(docker-machine env --swarm swarm-0)\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ docker $(docker-machine config swarm-0) network create --driver overlay prod\
\pard\pardeftab720\ri0\sa120\partightenfactor0

\f0\fs19 \cf0 $ docker run -d -it --net prod --name dev-vm-1 ubuntu:12.04\
\pard\pardeftab720\ri0\sa60\partightenfactor0
\cf0 $ docker attach dev-vm-1-id\
$ docker run -d -it --net prod --name dev-vm-7 ubuntu:12.04\
$ docker attach dev-vm-id-2\
\
\pard\pardeftab720\ri0\sb320\sa60\partightenfactor0

\f1\b\fs28 \cf0 Troubleshooting OVS Single-Host Setup \
\pard\pardeftab720\ri0\sa60\partightenfactor0

\f0\b0\fs19 \cf0 $ sudo apt-get install openvswitch-switch \
$ cd /usr/bin \
$ wget {\field{\*\fldinst{HYPERLINK "https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker"}}{\fldrslt https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker}} \
$ chmod a+rwx ovs-docker\
$ ovs-vsctl add-br ovs-br1 \
\pard\pardeftab720\ri0\sa60\partightenfactor0

\f1\fs20 \cf0 $ ifconfig ovs-br1 173.16.1.1 netmask 255.255.255.0 up \
\pard\pardeftab720\ri0\sa60\partightenfactor0

\f0\fs19 \cf0 $ docker run -I -t --name container1 ubuntu /bin/bash\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ docker run -I -t --name container2 ubuntu /bin/bash\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 $ ovs-docker add-port ovs-br1 eth1 container1 --ipaddress=173.16.1.2/24\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ ovs-docker add-port ovs-br1 eth1 container2 --ipaddress=173.16.1.3/24\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 $ docker exec container1 ifconfig\
$ docker exec container2 ifconfig\
$ docker exec container2 ping 172.16.17.2\
$ docker exec container1 ping 172.16.17.2\
\
\pard\pardeftab720\ri0\sb320\sa60\partightenfactor0

\f1\b\fs28 \cf0 Troubleshooting OVS Multiple-Host Setup
\f0\b0\fs19 \
$ wget -qO- {\field{\*\fldinst{HYPERLINK "https://get.docker.com/"}}{\fldrslt \cf2 \ul \ulc2 https://get.docker.com/}} | sh\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 $ sudo apt-get install openvswitch-switch\
$ cd /usr/bin \
$ wget {\field{\*\fldinst{HYPERLINK "https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker"}}{\fldrslt \cf2 \ul \ulc2 https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker}}\
$ chmod a+rwx ovs-docker\
$ service docker stop\
$ ip link set dev docker0 down\
$ ip addr del 172.17.42.1/16 dev docker0\
$ ip addr add 192.168.10.1/24 dev docker0\
$ ip link set dev docker0 up\
$ ip addr show docker0\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ service docker start\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 $ ovs-vsctl add-br br0
\f2  \

\f0 $ ovs-vsctl add-port br0 gre0 -- set interface gre0 type=gre options:remote_ip=30.30.30.8\
$ brctl addif docker0 br0
\f2  \

\f0 $ service docker stop\
$ iptables -t nat -F POSTROUTING \
$ ip link set dev docker0 down \
$ ip addr del 172.17.42.1/16 dev docker0\
$ ip addr add 192.168.10.2/24 dev docker0 \
$ ip link set dev docker0 up\
$ ip addr show docker0\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ service docker start\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 $ ip link set br0 up\
$ ovs-vsctl add-br br0
\f2  
\f0 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 $ ovs-vsctl add-port br0 gre0 -- set interface gre0 type=gre options:remote_ip=30.30.30.7\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 $ brctl addif docker0 br0\
$ docker run -t -i --name container1 ubuntu:latest /bin/bash \
$ docker run -t -i --name container2 ubuntu:latest /bin/bash \
\pard\pardeftab720\li720\ri0\sa120\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f1\fs20 \cf0 \
\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 \
\pard\pardeftab720\li720\ri0\sa120\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 \
\
\pard\pardeftab720\li720\ri0\sa120\partightenfactor0
\cf0 \
\
\
\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 \
\
\pard\pardeftab720\ri0\sa60\partightenfactor0
\cf0 \
\
\
\
\
\pard\pardeftab720\ri0\sa120\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0
\cf0 \
\pard\pardeftab720\ri0\sa60\partightenfactor0
\cf0 \
\
\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\b \cf0 \
\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\b0 \cf0 \
\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f2\fs22 \cf0 \
\
\
\pard\pardeftab720\ri0\sb60\sa60\partightenfactor0

\f0\fs19 \cf0 \
\pard\pardeftab720\ri0\sa60\partightenfactor0
\cf0 \
\
\
\
}